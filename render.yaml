services:
  - type: web
    name: my-strapi-app
    env: node
    plan: free
    nodeVersion: 20.19.4
    buildCommand: |
      echo "=== 使用 Node.js 20.19.4 构建 Strapi ==="
      echo "Node version: $(node --version)"
      echo "NPM version: $(npm --version)"
      
      # 设置环境变量
      export STRAPI_DISABLE_SWC=true
      export NODE_OPTIONS="--max-old-space-size=4096"
      export STRAPI_TELEMETRY_DISABLED=true
      export NODE_ENV=production
      
      # 安装依赖
      echo "安装依赖..."
      npm ci --only=production
      
      # 清理之前的构建
      echo "清理之前的构建..."
      rm -rf dist/ .strapi/ build/ node_modules/.cache/
      
      # 创建 .swcrc 文件来禁用 SWC
      echo '{"jsc":{"parser":{"syntax":"typescript","tsx":true},"target":"es2020","loose":false},"module":{"type":"commonjs"},"minify":false}' > .swcrc
      
      # 创建 .strapi-updater.json 来禁用更新检查
      echo '{"disabled":true,"checkUpdate":false}' > .strapi-updater.json
      
      # 使用简化的构建命令
      echo "开始构建..."
      STRAPI_DISABLE_SWC=true STRAPI_TELEMETRY_DISABLED=true NODE_ENV=production npm run build
      
      # 检查构建结果
      echo "检查构建结果..."
      if [ -d "dist" ]; then
        echo "✅ dist 目录存在"
        ls -la dist/
        if [ -d "dist/config" ]; then
          echo "✅ config 目录存在"
          ls -la dist/config/
        else
          echo "❌ config 目录不存在"
        fi
      else
        echo "❌ dist 目录不存在"
      fi
      
      echo "构建完成！"
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: NODE_VERSION
        value: "20"
      - key: STRAPI_DISABLE_UPLOAD
        value: "true"
      - key: STRAPI_DISABLE_SWC
        value: "true"
      - key: STRAPI_TELEMETRY_DISABLED
        value: "true"
      - key: NODE_OPTIONS
        value: "--max-old-space-size=4096"
      - key: STRAPI_UPLOAD_PROVIDER
        value: "local"
      - key: STRAPI_UPLOAD_PROVIDER_OPTIONS
        value: "{}"
      - key: STRAPI_ADMIN_PATH
        value: "/admin"
      - key: STRAPI_ADMIN_BACKEND_URL
        value: "https://my-strapi-app-uaeb.onrender.com"
      - key: ADMIN_JWT_SECRET
        value: "m6BLQV97nhFc1yW5LVfsGg=="
      - key: API_TOKEN_SALT
        value: "c6GQp5FuQ2NqCQL5gYDpUw=="
      - key: TRANSFER_TOKEN_SALT
        value: "+W9awzvJVBxLYpNTBZY1Jg=="
      - key: STRAPI_PUBLIC_API_ENABLED
        value: "true"
      - key: STRAPI_PUBLIC_API_PERMISSIONS
        value: "find,findOne"
      - key: STRAPI_PUBLIC_ACCESS
        value: "true"
      - key: STRAPI_DISABLE_PERMISSIONS
        value: "true"
      # PostgreSQL 数据库配置（需要在 Render 控制台中设置 DATABASE_URL）
      - key: DATABASE_SSL
        value: "true"
      - key: DATABASE_SSL_REJECT_UNAUTHORIZED
        value: "false"
      - key: DATABASE_POOL_MIN
        value: "0"
      - key: DATABASE_POOL_MAX
        value: "10" 